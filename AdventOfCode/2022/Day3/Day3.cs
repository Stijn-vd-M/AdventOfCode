namespace Day3
{
	public class Day3
	{
		private const string Text = "";

		private const char LineBreak = '-';

		[Fact]
		public void Test1()
		{
			var splits = Text.Split(LineBreak);
			var totalPrio = 0;

			foreach(var container in splits)
			{
				totalPrio += GetPriority(GetDupe(container));
			}


			var dupes = new List<char>();

			foreach (var container in splits)
			{
				dupes.Add(GetDupe(container));
			}

			var result = totalPrio;
		}

		[Fact]
		public void Test2()
		{
			var splits = Text.Split(LineBreak);

			var totalPrio = 0;

			for (var i = 0; i < splits.Length; i += 3)
			{
				totalPrio += GetPriority(GetBadge(splits[i], splits[i + 1], splits[i + 2]));
			}

			var result = totalPrio;
		}

		private char GetBadge(string a, string b, string c)
		{
			for (var i = 0; i < a.Length; i ++)
			{
				for (var j = 0; j < b.Length; j ++)
				{
					for (var n = 0; n < c.Length; n ++)
					{
						if (a[i] == b[j] && a[i] == c[n])
						{
							return a[i];
						}
					}
				}
			}

			throw new Exception();
		}

		private char GetDupe(string container)
		{
			var l = container.Length;

			var left = container.Take(new Range(0, l / 2)).ToArray();
			var right = container.Take(new Range(l / 2, l)).ToArray();

			for (var i = 0; i < left.Length; i++)
			{
				for (var j = 0; j < right.Length; j++)
				{
					if (left[i] == right[j])
					{
						return left[i];
					}
				}
			}

			throw new Exception();
		}

		private int GetPriority(char c)
		{
			const int lower = ((int)'a') - 1;
			const int upper = ((int)'A') -1;

			return c == (c.ToString().ToUpper()[0])
				? (((int)c) - upper) + 26
				: ((int)c) - lower;
		}
	}
}